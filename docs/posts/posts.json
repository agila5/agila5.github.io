[
  {
    "path": "posts/2021-07-06-useR2021/",
    "title": "osmextract: An R package to download, convert, and import large Open Street Map datasets - useR2021",
    "description": "Slides used for introducing the R package osmextract at useR2021 conference.",
    "author": [
      {
        "name": "Andrea Gilardi",
        "url": "https://agila5.github.io/"
      },
      {
        "name": "Robin Lovelace",
        "url": "https://www.robinlovelace.net/"
      }
    ],
    "date": "2021-07-06",
    "categories": [
      "Open Street Map"
    ],
    "contents": "\r\nThe following slides were used to present the osmextract R package at useR2021 conference. Get slides and code.\r\nAbstract: OpenStreetMap (OSM) is an online database that provides open-access geographic and rich attribute data worldwide, representing a wide range of physical and human features, including roads, rivers, and political boundaries. OSM is the world’s largest open-access source of geographic vector data, comprising nodes (points), ways (lines and polygons) and relations (describing a wide range of entities). Practical applications include disaster response, transport planning, and service location. OSM datasets can be manually downloaded from the project’s servers directly or via the R package osmdata, which uses the Overpass API. Large ‘extracts’ are also available from external providers (such as geofabrik.de) in a compressed binary format based on protocol buffers. The aim of osmextract is to enable processing and import of such OSM extracts. The package is composed of three main functions that can be used to 1) match an input location with one of the OSM extracts, either via spatial matching or approximate string distance; 2) download the chosen file; 3) convert the compressed data to Geopackage format. The main function, named oe_get(), returns sf objects. This workflow is effective for importing OSM extracts covering large geographical areas. Furthermore, the conversion process is based on GDAL routines, enabling customized spatial filters or SQL-like queries, further boosting import performance.\r\n\r\n\r\n\r\n",
    "preview": "https://user-images.githubusercontent.com/22221146/123111691-65be5c80-d43d-11eb-87ff-cced0e52f003.png",
    "last_modified": "2021-07-26T12:48:44+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-05-21-tests/",
    "title": "Tests...",
    "description": "Rmd file for testing purposes",
    "author": [
      {
        "name": "Andrea Gilardi",
        "url": "https://agila5.github.io/"
      }
    ],
    "date": "2021-05-21",
    "categories": [],
    "contents": "\r\nWow, such empty\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-07-26T12:48:31+02:00",
    "input_file": {}
  }
]
